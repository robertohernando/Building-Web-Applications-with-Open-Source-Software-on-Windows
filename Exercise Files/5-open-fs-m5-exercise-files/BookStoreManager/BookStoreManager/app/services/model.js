(function () {
    'use strict';

    var serviceId = 'model';
    angular.module('app').factory(serviceId,
        [model]);

    function model() {
        return {
            Book: Book,
            createMetadataStore: createMetadataStore
        };
    }
    
    function Book() {
        this.id = 0;
        this.title = "";
        this.author = "";
        this.price = 0;
    }

    // Breeze...
    // Convenience variables
    var DT = breeze.DataType;

    var defaultNamespace = 'BookModel';

    // Breeze Labs: breeze.metadata.helper.js
    var helper = new breeze.MetadataHelper(defaultNamespace);
    // Creates a metadataStore 
    function createMetadataStore(serviceName) {

        var store = new breeze.MetadataStore({
            namingConvention: breeze.NamingConvention.camelCase
        });

        helper.addDataService(store, serviceName);

        addBookType(store);
        return store;
    }
    
    function addBookType(store) {
        var entityType = {
            shortName: "Book",
            namespace: defaultNamespace,
            autoGeneratedKeyType: breeze.AutoGeneratedKeyType.Identity,
            defaultResourceName: "Book",

            dataProperties: {
                id: { dataType: DT.Int32, isPartOfKey: true },
                title: { maxLength: 100, isNullable: false }, // DT.String is the default type
                author: { maxLength: 60, isNullable: false },
                price: { dataType: DT.Decimal, isNullable: false }
            }
        };

        return helper.addTypeToStore(store, entityType);
    } 

})();